<launch>
  <arg name="mav_name" default="hummingbird"/>
  <arg name="world_name" default="Marker_world"/>
  <arg name="enable_logging" default="false" />
  <arg name="enable_ground_truth" default="true" />
  <arg name="log_file" default="$(arg mav_name)" />

  <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find rotors_gazebo)/models"/>
  <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find rotors_gazebo)/models"/>
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find controller)/Worlds/$(arg world_name).world"/>
    <!-- <arg name="debug" value="true"/> -->
    <arg name="paused" value="false"/>
    <!-- <arg name="gui" value="false"/> -->
  </include>

  <group ns="$(arg mav_name)">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg log_file)"/>
    </include>
    <node name="roll_pitch_yawrate_thrust_controller_node" pkg="rotors_control" type="roll_pitch_yawrate_thrust_controller_node" respawn="true" output="screen">
      <rosparam
        command="load" file="$(find rotors_gazebo)/resource/roll_pitch_yawrate_thrust_controller_$(arg mav_name).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
      <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
      <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />  
</group>




  <node name="marker_tracker" pkg="controller" type="marker_detector.py" output="screen"/>
  <node name="translate_node" pkg="controller" type="translater.py" output="screen" >
    </node>
  <!--node name="setpoint_node" pkg="controller" type="setpoint.py" output="screen" /-->

  <!--rqt_plot is a resource hog, so if you're seeing high CPU usage, don't launch rqt_plot  -->
    <node name="rqt_plot" pkg="rqt_plot" type="rqt_plot" 
    args="/control_effort/data /state/data /setpoint/data" />


  <group ns="pid_controllers">
    <!--node name="temp_pid" pkg="pid" ns="roll_controller" type="controller" output="screen" >
      <param name="Kp" value="0.001" />
      <param name="Ki" value="0.0" />
      <param name="Kd" value="0.1" />
      <param name="upper_limit" value="0.02" />
      <param name="lower_limit" value="0.02" />
      <param name="windup_limit" value="3.14" />
    </node-->

    <node name="temp_pid" pkg="pid" ns="yaw_controller" type="controller" output="screen" >
      <param name="Kp" value="2.0" />
      <param name="Ki" value="0.0" />
      <param name="Kd" value="0.0" />
      <param name="upper_limit" value="3" />
      <param name="lower_limit" value="-3" />
      <param name="windup_limit" value="3.14" />
      <param name="max_loop_frequency" value="100.0" />
      <param name="min_loop_frequency" value="100.0" />
      <param name="angle_error" value="true" />
    </node>

    <node name="temp_pid" pkg="pid" ns="pitch_controller" type="controller" output="screen" >
      <param name="Kp" value="0.001" />
      <param name="Ki" value="0.0" />
      <param name="Kd" value="0.1" />
      <param name="upper_limit" value="0.02" />
      <param name="lower_limit" value="0.02" />
      <param name="windup_limit" value="3.14" />
    </node>

    <node name="temp_pid" pkg="pid" ns="roll_controller" type="controller" output="screen" >
      <param name="Kp" value="1.0" />
      <param name="Ki" value="0.0" />
      <param name="Kd" value="0.0" />
      <param name="upper_limit" value="3" />
      <param name="lower_limit" value="-3" />
      <param name="windup_limit" value="3.14" />
      <param name="max_loop_frequency" value="100.0" />
      <param name="min_loop_frequency" value="100.0" />
      <param name="angle_error" value="true" />
    </node>

    <node name="temp_pid" pkg="pid" ns="z_controller" type="controller" output="screen" >
      <param name="Kp" value="2.0" />
      <param name="Ki" value="0.0" />
      <param name="Kd" value="5.0" />
      <param name="upper_limit" value="10" />
      <param name="lower_limit" value="-1000" />
      <param name="windup_limit" value="10" />
    </node>

    <node name="controller" pkg="pid" ns="altitude_rate" type="controller" >
        <param name="Kp" value="0.9" />
        <param name="Ki" value="0.2" />
        <param name="Kd" value="0.0" />
        <param name="upper_limit" value="0.2" />
        <param name="lower_limit" value="-0.2" />
        <param name="windup_limit" value="4.0" />
    </node>
    <node name="controller" pkg="pid" ns="altitude" type="controller" >
        <param name="Kp" value="0.9" />
        <param name="Ki" value="0.2" />
        <param name="Kd" value="0.0" />
        <param name="upper_limit" value="0.2" />
        <param name="lower_limit" value="-0.2" />
        <param name="windup_limit" value="4.0" />
    </node>
  <node name="controller" pkg="pid" ns="yaw" type="controller" >
        <param name="Kp" value="1.0" />
        <param name="Ki" value="0.0" />
        <param name="Kd" value="0.0" />
        <param name="upper_limit" value="3" />
        <param name="lower_limit" value="-3" />
        <param name="windup_limit" value="3.14" />
        <param name="max_loop_frequency" value="100.0" />
        <param name="min_loop_frequency" value="100.0" />
    </node>
  </group>
</launch>
